// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repository

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type StatusEnum string

const (
	StatusEnumActive   StatusEnum = "active"
	StatusEnumInactive StatusEnum = "inactive"
	StatusEnumDeleted  StatusEnum = "deleted"
)

func (e *StatusEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = StatusEnum(s)
	case string:
		*e = StatusEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for StatusEnum: %T", src)
	}
	return nil
}

type NullStatusEnum struct {
	StatusEnum StatusEnum `json:"status_enum"`
	Valid      bool       `json:"valid"` // Valid is true if StatusEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullStatusEnum) Scan(value interface{}) error {
	if value == nil {
		ns.StatusEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.StatusEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullStatusEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.StatusEnum), nil
}

type BusinessUnit struct {
	ID         pgtype.UUID        `json:"id"`
	DomainName string             `json:"domain_name"`
	TenantID   string             `json:"tenant_id"`
	Name       string             `json:"name"`
	Status     NullStatusEnum     `json:"status"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `json:"updated_at"`
	DeletedAt  pgtype.Timestamptz `json:"deleted_at"`
}

type Department struct {
	ID             pgtype.UUID        `json:"id"`
	BusinessUnitID pgtype.UUID        `json:"business_unit_id"`
	Name           string             `json:"name"`
	Status         NullStatusEnum     `json:"status"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `json:"updated_at"`
	DeletedAt      pgtype.Timestamptz `json:"deleted_at"`
}

type FieldType struct {
	ID               pgtype.UUID        `json:"id"`
	TypeName         string             `json:"type_name"`
	Description      pgtype.Text        `json:"description"`
	ValidationSchema []byte             `json:"validation_schema"`
	DefaultConfig    []byte             `json:"default_config"`
	Status           NullStatusEnum     `json:"status"`
	CreatedAt        pgtype.Timestamptz `json:"created_at"`
	UpdatedAt        pgtype.Timestamptz `json:"updated_at"`
	DeletedAt        pgtype.Timestamptz `json:"deleted_at"`
}

type FormCategory struct {
	ID          pgtype.UUID        `json:"id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	Status      NullStatusEnum     `json:"status"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
}

type FormField struct {
	ID               pgtype.UUID        `json:"id"`
	FormTemplateID   pgtype.UUID        `json:"form_template_id"`
	FormSectionID    pgtype.UUID        `json:"form_section_id"`
	FieldName        string             `json:"field_name"`
	FieldTypeID      pgtype.UUID        `json:"field_type_id"`
	FieldOrder       int32              `json:"field_order"`
	ConditionalLogic []byte             `json:"conditional_logic"`
	Status           NullStatusEnum     `json:"status"`
	CreatedAt        pgtype.Timestamptz `json:"created_at"`
	UpdatedAt        pgtype.Timestamptz `json:"updated_at"`
	DeletedAt        pgtype.Timestamptz `json:"deleted_at"`
}

type FormSection struct {
	ID               pgtype.UUID        `json:"id"`
	FormTemplateID   pgtype.UUID        `json:"form_template_id"`
	SectionName      string             `json:"section_name"`
	SectionOrder     int32              `json:"section_order"`
	Description      pgtype.Text        `json:"description"`
	ConditionalLogic []byte             `json:"conditional_logic"`
	Status           NullStatusEnum     `json:"status"`
	CreatedAt        pgtype.Timestamptz `json:"created_at"`
	UpdatedAt        pgtype.Timestamptz `json:"updated_at"`
	DeletedAt        pgtype.Timestamptz `json:"deleted_at"`
}

type FormTemplate struct {
	ID             pgtype.UUID        `json:"id"`
	Name           string             `json:"name"`
	Description    pgtype.Text        `json:"description"`
	FormCategoryID pgtype.UUID        `json:"form_category_id"`
	BusinessUnitID pgtype.UUID        `json:"business_unit_id"`
	Version        pgtype.Int4        `json:"version"`
	PublishedAt    pgtype.Timestamptz `json:"published_at"`
	CreatedBy      pgtype.UUID        `json:"created_by"`
	ApprovedBy     pgtype.UUID        `json:"approved_by"`
	ApprovedAt     pgtype.Timestamptz `json:"approved_at"`
	Status         NullStatusEnum     `json:"status"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `json:"updated_at"`
	DeletedAt      pgtype.Timestamptz `json:"deleted_at"`
}

type Permission struct {
	ID          string             `json:"id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	Resource    string             `json:"resource"`
	Action      string             `json:"action"`
	Status      NullStatusEnum     `json:"status"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
}

type Role struct {
	ID           string             `json:"id"`
	Name         string             `json:"name"`
	Description  pgtype.Text        `json:"description"`
	IsSystemRole pgtype.Bool        `json:"is_system_role"`
	Status       NullStatusEnum     `json:"status"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
	DeletedAt    pgtype.Timestamptz `json:"deleted_at"`
}

type RoleAssignment struct {
	ID                pgtype.UUID        `json:"id"`
	RolePermissionsID pgtype.UUID        `json:"role_permissions_id"`
	AssigneeID        pgtype.UUID        `json:"assignee_id"`
	BusinessUnitID    pgtype.UUID        `json:"business_unit_id"`
	DepartmentID      pgtype.UUID        `json:"department_id"`
	AssignedBy        pgtype.UUID        `json:"assigned_by"`
	AssignedAt        pgtype.Timestamptz `json:"assigned_at"`
	ExpiresAt         pgtype.Timestamptz `json:"expires_at"`
	Status            NullStatusEnum     `json:"status"`
	UpdatedAt         pgtype.Timestamptz `json:"updated_at"`
	DeletedAt         pgtype.Timestamptz `json:"deleted_at"`
}

type RolePermission struct {
	ID           pgtype.UUID        `json:"id"`
	RoleID       string             `json:"role_id"`
	PermissionID string             `json:"permission_id"`
	ScopeID      pgtype.Text        `json:"scope_id"`
	Status       NullStatusEnum     `json:"status"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
	DeletedAt    pgtype.Timestamptz `json:"deleted_at"`
}

type Scope struct {
	ID          string             `json:"id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	Status      NullStatusEnum     `json:"status"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
}

type User struct {
	ID              pgtype.UUID        `json:"id"`
	AzureAdObjectID string             `json:"azure_ad_object_id"`
	HomeTenantID    pgtype.UUID        `json:"home_tenant_id"`
	DepartmentID    pgtype.UUID        `json:"department_id"`
	ManagerID       pgtype.UUID        `json:"manager_id"`
	Mail            string             `json:"mail"`
	DisplayName     string             `json:"display_name"`
	GivenName       pgtype.Text        `json:"given_name"`
	SurName         pgtype.Text        `json:"sur_name"`
	JobTitle        pgtype.Text        `json:"job_title"`
	OfficeLocation  pgtype.Text        `json:"office_location"`
	Status          NullStatusEnum     `json:"status"`
	LastLogin       pgtype.Timestamptz `json:"last_login"`
	LockedUntil     pgtype.Timestamptz `json:"locked_until"`
	CreatedAt       pgtype.Timestamptz `json:"created_at"`
	UpdatedAt       pgtype.Timestamptz `json:"updated_at"`
	DeletedAt       pgtype.Timestamptz `json:"deleted_at"`
}
