// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CheckUserPermission(ctx context.Context, arg CheckUserPermissionParams) (bool, error)
	CreatePermission(ctx context.Context, arg CreatePermissionParams) (Permission, error)
	CreateRole(ctx context.Context, arg CreateRoleParams) (Role, error)
	CreateRoleAssignment(ctx context.Context, arg CreateRoleAssignmentParams) (RoleAssignment, error)
	CreateRolePermission(ctx context.Context, arg CreateRolePermissionParams) (RolePermission, error)
	CreateScope(ctx context.Context, arg CreateScopeParams) (Scope, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeletePermission(ctx context.Context, id string) error
	GetActivePermissions(ctx context.Context) ([]Permission, error)
	GetAllBusinessUnitsInTenant(ctx context.Context, tenantID string) ([]BusinessUnit, error)
	GetAllDepartmentsInBusinessUnit(ctx context.Context, businessUnitID pgtype.UUID) ([]Department, error)
	GetAllPermissions(ctx context.Context) ([]Permission, error)
	GetAllRoles(ctx context.Context) ([]Role, error)
	GetAllScopes(ctx context.Context) ([]Scope, error)
	GetAllUsersInDepartment(ctx context.Context, departmentID pgtype.UUID) ([]User, error)
	GetBusinessUnitByDomainName(ctx context.Context, domainName string) (BusinessUnit, error)
	GetBusinessUnitByID(ctx context.Context, id pgtype.UUID) (BusinessUnit, error)
	GetDepartmentByID(ctx context.Context, id pgtype.UUID) (Department, error)
	GetDepartmentByName(ctx context.Context, arg GetDepartmentByNameParams) (Department, error)
	GetPermissionByID(ctx context.Context, id string) (Permission, error)
	GetPermissionsByResource(ctx context.Context, resource string) ([]Permission, error)
	GetPermissionsByResourceAndAction(ctx context.Context, arg GetPermissionsByResourceAndActionParams) (Permission, error)
	GetPermissionsByRole(ctx context.Context, roleID string) ([]GetPermissionsByRoleRow, error)
	GetRoleByID(ctx context.Context, id string) (Role, error)
	GetRolePermissionByID(ctx context.Context, id pgtype.UUID) (GetRolePermissionByIDRow, error)
	GetScopeByID(ctx context.Context, id string) (Scope, error)
	GetSystemRoles(ctx context.Context) ([]Role, error)
	GetUserByEmail(ctx context.Context, mail string) (User, error)
	GetUserByID(ctx context.Context, id pgtype.UUID) (User, error)
	GetUserRoleAssignments(ctx context.Context, assigneeID pgtype.UUID) ([]GetUserRoleAssignmentsRow, error)
	UpdatePermission(ctx context.Context, arg UpdatePermissionParams) (Permission, error)
}

var _ Querier = (*Queries)(nil)
