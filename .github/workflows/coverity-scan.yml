name: Coverity Scan

on:
  push:
    branches: [main]
  pull_request:

jobs:
  coverity:
    name: Run Coverity Scan
    runs-on: ubuntu-latest

    env:
      GO111MODULE: on

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Clear Go cache
        run: |
          go clean -cache -modcache -testcache
          rm -rf ~/go/pkg/mod

      - name: Verify Go version
        run: go version

      # Cache coverity_tool folder
      - name: Cache Coverity Tool
        id: cache-coverity-tool
        uses: actions/cache@v3
        with:
          path: coverity_tool
          key: coverity-tool-${{ runner.os }}-${{ secrets.COVERITY_TOKEN }}
          restore-keys: |
            coverity-tool-${{ runner.os }}-

      # Download Coverity Tool only if cache miss
      - name: Download Coverity Tool
        if: steps.cache-coverity-tool.outputs.cache-hit != 'true'
        run: |
          mkdir -p coverity_tool
          wget --post-data "token=${{ secrets.COVERITY_TOKEN }}&project=${{ secrets.COVERITY_PROJECT_NAME }}" \
               https://scan.coverity.com/download/linux64 \
               -O coverity_tool/coverity_tool.tgz
          tar xzf coverity_tool/coverity_tool.tgz -C coverity_tool

      - name: Configure Coverity for Go
        run: |
          export COVERITY_DIR=$(find coverity_tool -maxdepth 1 -type d -name 'cov-analysis*')
          $COVERITY_DIR/bin/cov-configure --template --compiler go --comptype go

      - name: Run cov-build
        run: |
          export COVERITY_DIR=$(find coverity_tool -maxdepth 1 -type d -name 'cov-analysis*')
          mkdir cov-int
          $COVERITY_DIR/bin/cov-build --dir cov-int go build -mod=mod ./cmd/...

      - name: Run Coverity analysis
        run: |
          echo "Listing coverity_tool folder:"
          ls -l coverity_tool
          export COVERITY_DIR=$(find coverity_tool -maxdepth 1 -type d -name 'cov-analysis*' | head -n 1)
          echo "Using COVERITY_DIR=$COVERITY_DIR"
          ls -l "$COVERITY_DIR/bin"
          chmod +x "$COVERITY_DIR/bin/cov-analyze"
          "$COVERITY_DIR/cov-analyze" --dir cov-int --all

      - name: Generate HTML and JSON reports
        run: |
          export COVERITY_DIR=$(find coverity_tool -maxdepth 1 -type d -name 'cov-analysis*')
          mkdir coverity-reports
          $COVERITY_DIR/bin/cov-format-errors --dir cov-int \
            --json-output-v7 coverity-reports/coverity-results.json \
            --html-output coverity-reports/html \
            --format html

      - name: Upload Coverity Reports (HTML + JSON)
        uses: actions/upload-artifact@v4
        with:
          name: coverity-reports
          path: coverity-reports

      - name: Package results
        run: |
          tar czf analysis.tgz cov-int

      - name: Upload to Coverity (cloud)
        run: |
          curl --form token=${{ secrets.COVERITY_TOKEN }} \
               --form email=${{ secrets.COVERITY_EMAIL }} \
               --form file=@analysis.tgz \
               --form version="GitHub Action Build $GITHUB_RUN_NUMBER" \
               --form description="Automated scan from GitHub Actions" \
               https://scan.coverity.com/builds?project=${{ secrets.COVERITY_PROJECT_NAME }}
